name: openbsd

on:
  schedule:
    - cron:  '0 1 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ secrets.VERSION }}
      CPU: ${{ matrix.target }}
      OS: ${{ matrix.os }}
      VARIANT: ${{ matrix.suffix == 'yes' && format('-{0}', matrix.release) || ''}}
      LINKFLAGS: ${{ matrix.linkflags }}
      CLISP_LDFLAGS: ${{ matrix.clispldflags }}
      CC: ${{ matrix.target == 'x86' && 'cc -m32' || 'cc' }}
      ROSWELL_BRANCH: master
      GH_USER: roswell
      GH_REPO: clisp_head
      GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        release: ['7.5']
        target: [x86-64, arm64]
        suffix: [yes]
        os: [openbsd]
        lisp: [sbcl-bin/2.4.0]
    environment: SET_VERSION

    steps:
      - uses: actions/checkout@v4
      - name: setenv
        run: |
          echo "$HOME/.roswell/bin" >> $GITHUB_PATH
          echo "ROSWELL_BRANCH=release" >> $GITHUB_ENV
      - name: checkenv
        run: |
          uname -s
          uname -m
          echo $ROSWELL_INSTALL_DIR
          echo $ROSWELL_BRANCH
      - name: Install Roswell
        env:
          LISP: ${{ matrix.lisp }}
        run: |
          curl -L https://raw.githubusercontent.com/roswell/roswell/release/scripts/install-for-ci.sh | sh
          ros install snmsts/sn.github roswell/sbcl_bin
      - name: check uploaded
        id: check_uploaded
        env:
          VERSION: ${{ secrets.VERSION }}
          CPU: ${{ matrix.target }}
          OS: ${{ matrix.os }}
          VARIANT: ${{ matrix.suffix == 'yes' && format('-{0}', matrix.release) || ''}}
        run: make latest-version upload-archive-p
        continue-on-error: true
      - name: Test on OpenBSD
        if: steps.check_uploaded.outcome == 'failure'
        uses: cross-platform-actions/action@v0.25.0
        with:
          environment_variables: VERSION CPU OS VARIANT LINKFLAGS CLISP_LDFLAGS CC GH_USER GH_REPO GITHUB_OAUTH_TOKEN
          operating_system: ${{ matrix.os }}
          architecture: ${{ matrix.target }}
          version: ${{ matrix.release }}
          shell: bash
          run: |
            uname -a
            whoami
            pwd
            sudo touch /usr/bin/ros
            sudo chmod 755 /usr/bin/ros
            sudo pkg_add gmake git sbcl automake-1.16.5 autoconf-2.71 curl
            gmake latest-version compile archive;
      - name: upload
        if: steps.check_uploaded.outcome == 'failure'
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ secrets.VERSION }}
          CPU: ${{ matrix.target }}
          VARIANT: ${{ matrix.suffix }}
        run: |
          ls
          env FILE=`ls *.bz2` make latest-version upload-archive;
